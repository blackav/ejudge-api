package ejudge

type Submit struct {
	SubmitID          int64  `json:"submit_id"`
	UserID            int32  `json:"user_id"`
	ContestID         int32  `json:"contest_id"`
	ProbID            int32  `json:"prob_id"`
	LangID            *int32 `json:"lang_id,omitempty"`
	Status            int32  `json:"status"`
	StatusStr         string `json:"status_str"`
	StatusDesc        string `json:"status_desc,omitempty"`
	CompilerOutput    string `json:"compiler_output,omitempty"`
	TestCheckerOutput string `json:"test_checker_output,omitempty"`
	Time              *int64 `json:"time,omitempty"`
	RealTime          *int64 `json:"real_time,omitempty"`
	ExitCode          *int32 `json:"exit_code,omitempty"`
	TermSignal        *int32 `json:"term_signal,omitempty"`
	MaxMemoryUsed     *int64 `json:"max_memory_used,omitempty"`
	MaxRSS            *int64 `json:"max_rss,omitempty"`
	Input             string `json:"input,omitempty"`
	Output            string `json:"output,omitempty"`
	Error             string `json:"error,omitempty"`
	ExtUserKind       string `json:"ext_user_kind,omitempty"`
	ExtUser           string `json:"ext_user,omitempty"`
	NotifyDriver      int32  `json:"notify_driver,omitempty"`
	NotifyKind        string `json:"notify_kind,omitempty"`
	NotifyQueue       string `json:"notify_queue,omitempty"`
}

type Run struct {
	RunID            int32  `json:"run_id"`
	ContestID        int32  `json:"contest_id,omitempty"`
	RunUUID          string `json:"run_uuid,omitempty"`
	SerialID         int64  `json:"serial_id,omitempty"`
	Status           int32  `json:"status"`
	StatusStr        string `json:"status_str,omitempty"`
	StatusDesc       string `json:"status_desc,omitempty"`
	RunTime          int64  `json:"run_time,omitempty"`
	NSec             int32  `json:"nsec,omitempty"`
	RunTimeUs        int64  `json:"run_time_us,omitempty"`
	Duration         int32  `json:"duration,omitempty"`
	UserID           int32  `json:"user_id,omitempty"`
	UserLogin        string `json:"user_login,omitempty"`
	UserName         string `json:"user_name,omitempty"`
	ProbID           int32  `json:"prob_id,omitempty"`
	ProbName         string `json:"prob_name,omitempty"`
	ProbInternalName string `json:"prob_internal_name,omitempty"`
	ProbUUID         string `json:"prob_uuid,omitempty"`
	Variant          int32  `json:"variant,omitempty"`
	RawVariant       int32  `json:"raw_variant,omitempty"`
	LangID           int32  `json:"lang_id,omitempty"`
	LangName         string `json:"lang_name,omitempty"`
	IP               string `json:"ip,omitempty"`
	SSLFlag          bool   `json:"ssl_flag,omitempty"`
	IPV6Flag         bool   `json:"ipv6_flag,omitempty"`
	SHA1             string `json:"sha1,omitempty"`
	SHA256           string `json:"sha256,omitempty"`
	LocaleID         int32  `json:"locale_id,omitempty"`
	EOLNType         int32  `json:"eoln_type,omitempty"`
	MIMEType         string `json:"mime_type,omitempty"`
	Size             int64  `json:"size,omitempty"`
	StoreFlags       int32  `json:"store_flags,omitempty"`
	IsImported       bool   `json:"is_imported,omitempty"`
	IsHidden         bool   `json:"is_hidden,omitempty"`
	IsReadOnly       bool   `json:"is_readonly,omitempty"`
	PassedMode       bool   `json:"passed_mode,omitempty"`
	Score            *int32 `json:"score,omitempty"`
	Test             *int32 `json:"test,omitempty"`
	IsMarked         bool   `json:"is_marked,omitempty"`
	ScoreAdj         int32  `json:"score_adj,omitempty"`
	JudgeID          int32  `json:"judge_id,omitempty"`
	JudgeUUID        string `json:"judge_uuid,omitempty"`
	Pages            int32  `json:"pages,omitempty"`
	TokenFlags       int32  `json:"token_flags,omitempty"`
	TokenCount       int32  `json:"token_count,omitempty"`
	IsSaved          bool   `json:"is_saved,omitempty"`
	SavedStatus      *int32 `json:"saved_status,omitempty"`
	SavedStatusStr   string `json:"saved_status_str,omitempty"`
	SavedScore       *int32 `json:"saved_score,omitempty"`
	SavedTest        *int32 `json:"saved_test,omitempty"`
	IsChecked        bool   `json:"is_checked,omitempty"`
	IsVCS            bool   `json:"is_vcs,omitempty"`
	VerdictBits      uint32 `json:"verdict_bits,omitempty"`
	LastChangeUs     int64  `json:"last_change_us,omitempty"`
	TestsPassed      *int32 `json:"tests_passed,omitempty"`
	RawScore         *int32 `json:"raw_score,omitempty"`
	ScoreStr         string `json:"score_str,omitempty"`
	ExtUserKind      string `json:"ext_user_kind,omitempty"`
	ExtUser          string `json:"ext_user,omitempty"`
	NotifyDriver     int32  `json:"notify_driver,omitempty"`
	NotifyKind       string `json:"notify_kind,omitempty"`
	NotifyQueue      string `json:"notify_queue,omitempty"`
}

type UserlistMember struct {
	UserID         int32  `json:"user_id,omitempty"`
	ContestID      int32  `json:"contest_id,omitempty"`
	TeamRole       int32  `json:"team_role,omitempty"`
	Serial         int32  `json:"serial,omitempty"`
	CopiedFrom     int32  `json:"copied_from,omitempty"`
	Status         int32  `json:"status,omitempty"`
	Gender         int32  `json:"gender,omitempty"`
	Grade          int32  `json:"grade,omitempty"`
	Firstname      string `json:"firstname,omitempty"`
	FirstnameEn    string `json:"firstname_en,omitempty"`
	Middlename     string `json:"middlename,omitempty"`
	MiddlenameEn   string `json:"middlename_en,omitempty"`
	Surname        string `json:"surname,omitempty"`
	SurnameEn      string `json:"surname_en,omitempty"`
	Group          string `json:"group,omitempty"`
	GroupEn        string `json:"group_en,omitempty"`
	Email          string `json:"email,omitempty"`
	Homepage       string `json:"homepage,omitempty"`
	Occupation     string `json:"occupation,omitempty"`
	OccupationEn   string `json:"occupation_en,omitempty"`
	Discipline     string `json:"discipline,omitempty"`
	Inst           string `json:"inst,omitempty"`
	InstEn         string `json:"inst_en,omitempty"`
	Instshort      string `json:"instshort,omitempty"`
	InstshortEn    string `json:"instshort_en,omitempty"`
	Fac            string `json:"fac,omitempty"`
	FacEn          string `json:"fac_en,omitempty"`
	Facshort       string `json:"facshort,omitempty"`
	FacshortEn     string `json:"facshort_en,omitempty"`
	Phone          string `json:"phone,omitempty"`
	BirthDate      int64  `json:"birth_date,omitempty"`
	EntryDate      int64  `json:"entry_date,omitempty"`
	GraduationDate int64  `json:"graduation_date,omitempty"`
	CreateTime     int64  `json:"create_time,omitempty"`
	LastChangeTime int64  `json:"last_change_time,omitempty"`
	LastAccessTime int64  `json:"last_access_time,omitempty"`
}

type UserlistUserInfo struct {
	UserID            int32            `json:"user_id,omitempty"`
	ContestID         int32            `json:"contest_id,omitempty"`
	CntsReadOnly      bool             `json:"cnts_read_only,omitempty"`
	UserName          string           `json:"user_name,omitempty"`
	Instnum           int32            `json:"instnum,omitempty"`
	TeamPasswdMethod  int              `json:"team_passwd_method,omitempty"`
	Inst              string           `json:"inst,omitempty"`
	InstEn            string           `json:"inst_en,omitempty"`
	Instshort         string           `json:"instshort,omitempty"`
	InstshortEn       string           `json:"instshort_en,omitempty"`
	Fac               string           `json:"fac,omitempty"`
	FacEn             string           `json:"fac_en,omitempty"`
	Facshort          string           `json:"facshort,omitempty"`
	FacshortEn        string           `json:"facshort_en,omitempty"`
	Homepage          string           `json:"homepage,omitempty"`
	City              string           `json:"city,omitempty"`
	CityEn            string           `json:"city_en,omitempty"`
	Country           string           `json:"country,omitempty"`
	CountryEn         string           `json:"country_en,omitempty"`
	Region            string           `json:"region,omitempty"`
	Area              string           `json:"area,omitempty"`
	Zip               string           `json:"zip,omitempty"`
	Street            string           `json:"street,omitempty"`
	Location          string           `json:"location,omitempty"`
	Spelling          string           `json:"spelling,omitempty"`
	PrinterName       string           `json:"printer_name,omitempty"`
	ExamID            string           `json:"exam_id,omitempty"`
	ExamCypher        string           `json:"exam_cypher,omitempty"`
	Languages         string           `json:"languages,omitempty"`
	Phone             string           `json:"phone,omitempty"`
	Field0            string           `json:"field0,omitempty"`
	Field1            string           `json:"field1,omitempty"`
	Field2            string           `json:"field2,omitempty"`
	Field3            string           `json:"field3,omitempty"`
	Field4            string           `json:"field4,omitempty"`
	Field5            string           `json:"field5,omitempty"`
	Field6            string           `json:"field6,omitempty"`
	Field7            string           `json:"field7,omitempty"`
	Field8            string           `json:"field8,omitempty"`
	Field9            string           `json:"field9,omitempty"`
	AvatarStore       string           `json:"avatar_store,omitempty"`
	AvatarID          string           `json:"avatar_id,omitempty"`
	AvatarSuffix      string           `json:"avatar_suffix,omitempty"`
	CreateTime        int64            `json:"create_time,omitempty"`
	LastLoginTime     int64            `json:"last_login_time,omitempty"`
	LastChangeTime    int64            `json:"last_change_time,omitempty"`
	LastAccessTime    int64            `json:"last_access_time,omitempty"`
	LastPwdchangeTime int64            `json:"last_pwdchange_time,omitempty"`
	Members           []UserlistMember `json:"members,omitempty"`
}

type UserlistUserContest struct {
	UserID         int32 `json:"user_id,omitempty"`
	ContestID      int32 `json:"contest_id,omitempty"`
	Status         int32 `json:"status,omitempty"`
	CreateTime     int64 `json:"create_time,omitempty"`
	LastChangeTime int64 `json:"last_change_time,omitempty"`
	IsInvisible    bool  `json:"is_invisible,omitempty"`
	IsBanned       bool  `json:"is_banned,omitempty"`
	IsLocked       bool  `json:"is_locked,omitempty"`
	IsIncomplete   bool  `json:"is_incomplete,omitempty"`
	IsDisqualified bool  `json:"is_disqualified,omitempty"`
	IsPrivileged   bool  `json:"is_privileged,omitempty"`
	IsRegReadonly  bool  `json:"is_reg_readonly,omitempty"`
}

type UserlistCookie struct {
	IP          string `json:"ip,omitempty"`
	Cookie      string `json:"cookie,omitempty"`
	ClientKey   string `json:"client_key,omitempty"`
	Expire      int64  `json:"expire,omitempty"`
	UserID      int32  `json:"user_id,omitempty"`
	IsSSL       bool   `json:"ssl,omitempty"`
	ContestID   int32  `json:"contest_id,omitempty"`
	LocaleID    int32  `json:"locale_id,omitempty"`
	PrivLevel   int32  `json:"priv_level,omitempty"`
	Role        int32  `json:"role,omitempty"`
	IsRecovery  bool   `json:"recovery,omitempty"`
	IsTeamLogin bool   `json:"team_login,omitempty"`
	IsWS        bool   `json:"is_ws,omitempty"`
	IsJob       bool   `json:"is_job,omitempty"`
}

type UserlistUser struct {
	UserID              int32                 `json:"user_id,omitempty"`
	IsPrivileged        bool                  `json:"is_privileged,omitempty"`
	IsInvisible         bool                  `json:"is_invisible,omitempty"`
	IsBanned            bool                  `json:"is_banned,omitempty"`
	IsLocked            bool                  `json:"is_locked,omitempty"`
	ShowLogin           bool                  `json:"show_login,omitempty"`
	ShowEmail           bool                  `json:"show_email,omitempty"`
	ReadOnly            bool                  `json:"read_only,omitempty"`
	NeverClean          bool                  `json:"never_clean,omitempty"`
	SimpleRegistration  bool                  `json:"simple_registration,omitempty"`
	UserLogin           string                `json:"user_login"`
	Email               string                `json:"email,omitempty"`
	PasswdMethod        int                   `json:"passwd_method,omitempty"`
	Extra1              string                `json:"extra1,omitempty"`
	RegistrationTime    int64                 `json:"registration_time,omitempty"`
	LastLoginTime       int64                 `json:"last_login_time,omitempty"`
	LastMinorChangeTime int64                 `json:"last_minor_change_time,omitempty"`
	LastChangeTime      int64                 `json:"last_change_time,omitempty"`
	LastAccessTime      int64                 `json:"last_access_time,omitempty"`
	LastPwdchangeTime   int64                 `json:"last_pwdchange_time,omitempty"`
	Infos               []UserlistUserInfo    `json:"infos,omitempty"`
	Contests            []UserlistUserContest `json:"contests,omitempty"`
	Cookies             []UserlistCookie      `json:"cookies,omitempty"`
}

type Language struct {
	ID                       uint32   `json:"id"`
	CompileID                uint32   `json:"compile_id,omitempty"`
	Disabled                 bool     `json:"disabled,omitempty"`
	CompileRealTimeLimit     int64    `json:"compile_real_time_limit,omitempty"`
	Binary                   bool     `json:"binary,omitempty"`
	PriorityAdjustment       int32    `json:"priority_adjustment,omitempty"`
	Insecure                 bool     `json:"insecure,omitempty"`
	DisableSecurity          bool     `json:"disable_security,omitempty"`
	EnableSuidRun            bool     `json:"enable_suid_run,omitempty"`
	IsDos                    bool     `json:"is_dos,omitempty"`
	ShortName                string   `json:"short_name,omitempty"`
	LongName                 string   `json:"long_name,omitempty"`
	Key                      string   `json:"key,omitempty"`
	Arch                     string   `json:"arch,omitempty"`
	SrcSfx                   string   `json:"src_sfx,omitempty"`
	ExeSfx                   string   `json:"exe_sfx,omitempty"`
	ContentType              string   `json:"content_type,omitempty"`
	Cmd                      string   `json:"cmd,omitempty"`
	StyleCheckerCmd          string   `json:"style_checker_cmd,omitempty"`
	StyleCheckerEnv          []string `json:"style_checker_env,omitempty"`
	ExtID                    string   `json:"extid,omitempty"`
	SuperRunDir              string   `json:"super_run_dir,omitempty"`
	DisableAutoTesting       bool     `json:"disable_auto_testing,omitempty"`
	DisableTesting           bool     `json:"disable_testing,omitempty"`
	EnableCustom             bool     `json:"enable_custom,omitempty"`
	EnableEjudgeEnv          bool     `json:"enable_ejudge_env,omitempty"`
	PreserveLineNumbers      bool     `json:"preserve_line_numbers,omitempty"`
	DefaultDisabled          bool     `json:"default_disabled,omitempty"`
	Enabled                  bool     `json:"enabled,omitempty"`
	DisableAutoUpdate        bool     `json:"disable_auto_update,omitempty"`
	MaxVmSize                int64    `json:"max_vm_size,omitempty"`
	MaxStackSize             int64    `json:"max_stack_size,omitempty"`
	MaxFileSize              int64    `json:"max_file_size,omitempty"`
	MaxRssSize               int64    `json:"max_rss_size,omitempty"`
	RunMaxVmSize             int64    `json:"run_max_vm_size,omitempty"`
	RunMaxStackSize          int64    `json:"run_max_stack_size,omitempty"`
	RunMaxFileSize           int64    `json:"run_max_file_size,omitempty"`
	CompilerEnv              []string `json:"compiler_env,omitempty"`
	CompileServerID          string   `json:"compile_server_id,omitempty"`
	MultiHeaderSuffix        string   `json:"multi_header_suffix,omitempty"`
	ContainerOptions         string   `json:"container_options,omitempty"`
	CompilerContainerOptions string   `json:"compiler_container_options,omitempty"`
	CleanUpCmd               string   `json:"clean_up_cmd,omitempty"`
	RunEnvFile               string   `json:"run_env_file,omitempty"`
	CleanUpEnvFile           string   `json:"clean_up_env_file,omitempty"`
	Version                  string   `json:"version,omitempty"`
}
